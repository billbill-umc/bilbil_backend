name: publish-pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - publish

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download area csv file
        uses: wei/wget@v1
        with:
          args: -q ${{ secrets.AREA_CSV_URL }} -P ./docs

      - name: Create .env file
        run: |
          touch .env
          echo TOKEN_SECRET=${{ secrets.TOKEN_SECRET }} >> .env
          echo AREA_CSV_FILE=${{ secrets.AREA_CSV_FILE }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env
          echo REDIS_HOST=${{ secrets.REDIS_HOST }} >> .env
          echo REDIS_PORT=${{ secrets.REDIS_PORT }} >> .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: bilbil-backend
          IMAGE_TAG: latest
        run: |
          docker build -f docker/publish.dockerfile -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  publish:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Create SSH key file
        run: |
          touch ssh_key.pem
          echo "${{ secrets.AWS_EC2_SSH_KEY }}" >> ssh_key.pem
          chmod 600 ssh_key.pem

      - name: Clean docker images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key_path: ssh_key.pem
          script: |
            docker stop bilbil || true
            docker rm bilbil || true
            docker system prune -a -f || true

      - name: Setup aws credentials
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key_path: ssh_key.pem
          script: |
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_KEY }}

      - name: Login to AWS ECR
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key_path: ssh_key.pem
          script: |
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URL }}:latest

      - name: Pull image from AWS ECR
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key_path: ssh_key.pem
          script: |
            docker pull ${{ secrets.AWS_ECR_URL }}:latest

      - name: Run container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key_path: ssh_key.pem
          script: |
            docker run -d --restart unless-stopped --network host --name bilbil ${{ secrets.AWS_ECR_URL }}:latest
